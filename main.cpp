/**************************************
 ËØ∑‰ΩøÁî®Linux/UNIX/MacOSÊìç‰ΩúÁ≥ªÁªüËøõË°åÁºñËØëËøêË°å
 ‰ΩúËÄÖÔºöLidhËèúÈ∏ü‰Ωú‰∏öÂ∞èÁªÑ
 cw ldh xjh
 2018-12-25Ê≥®Èáä
***************************************/





#include <iostream>
#include <stdio.h>
#include <stdlib.h>
#include "unistd.h"
#define MAXWORKER 25
#define NONE                 "\e[0m"
#define BLACK                "\e[0;30m"
#define L_BLACK              "\e[1;30m"
#define RED                  "\e[0;31m"
#define L_RED                "\e[1;31m"
#define GREEN                "\e[0;32m"
#define L_GREEN              "\e[1;32m"
#define BROWN                "\e[0;33m"
#define YELLOW               "\e[1;33m"
#define BLUE                 "\e[0;34m"
#define L_BLUE               "\e[1;34m"
#define PURPLE               "\e[0;35m"
#define L_PURPLE             "\e[1;35m"
#define CYAN                 "\e[0;36m"
#define L_CYAN               "\e[1;36m"
#define GRAY                 "\e[0;37m"
#define WHITE                "\e[1;37m"
#define BOLD                 "\e[1m"
#define UNDERLINE            "\e[4m"
#define BLINK                "\e[5m"
#define REVERSE              "\e[7m"
#define HIDE                 "\e[8m"
#define CLEAR                "\e[2J"
#define CLRLINE              "\r\e[K"
#define PREFIX               "[%2u]"
#define SUFFIX                __LINE__

using namespace std;
char root_name[]="roshan";
char root_pass[20]="admin10086";

struct workerinfo {
	char wkid[20];
	char wkname[20];
	int wksex;
	char wkbirth[13];
	char fstdate[13];
	int wkBMnum;
	char wkBM[50];
	int wkGWnum;
	char wkGW[50];
	double essential_salary;
	double GWsalary_level;
	char wkaddress[50];
	char wkphonenumber[20];
	char wkemail[20];
	double wksalary;
	double factsalary;
	double tax_rate;
	double extra_salary;
	char BMJJ[200];
	char GWZZ[200];
	char pswd[20];
}someworker[MAXWORKER];

FILE * fp = fopen("misinfo.dat", "a+b");
int  size = sizeof(struct workerinfo);
int  sizec = sizeof(char);
char update_time[]= "2019-1-8";
char last_update[]="2018-12-25";
char mis_version[]= "1.0.1 beta";

//foo 
void gui_main();
void add_worker(int i);
void id_checker(int i);
void graph_worker();
void output_info(int i , int n);
int findinfo_string(int i , char a[]);
void deleteworker();
void root_check();
void output_salary();
void changeinfo();
void BMinfo();
void GWinfo();
void searchforinfo();
void gui_guest();
//endfoo
int main( void )
{
	system("clear");
	system("figlet Lidh.team");
	system("cal");
	system("date");
	cout<<"\n‚û§ ÂõûËΩ¶ÈîÆÁªßÁª≠:";
	char tmp_char1 = getchar();
	system("clear");
	rewind(fp);
	for (int i = 0 ;i < MAXWORKER ; i++)
	fread(&someworker[i], size, 1, fp);
	printf(RED"‚û§ üçé Ê≠§ÁâàÊú¨‰∏∫ÁïåÈù¢ÂçáÁ∫ßÁâà\n" );
	cout<<GREEN<<"‚û§ ÁâàÊú¨Âè∑:"<<mis_version<<"\n";
	cout<<BLUE<<"‚û§ Êõ¥Êñ∞Êó∂Èó¥:"<<update_time<<"\n";
	cout<<PURPLE<<"‚û§ Êú¨Ê¨°Êõ¥Êñ∞ÂÜÖÂÆπ:\n";
	cout<<L_CYAN<<"‚ü≤ ÈáçÂà∂Êñá‰ª∂ËØªÂÜô\n";
	cout<<GRAY<<"‚§´ Âà†Èô§ÂÜó‰Ωô‰ª£Á†Å\n";
	cout<<GREEN<<"+ Â¢ûÂä†ÁïåÈù¢ÁæéËßÇÂ∫¶\n";
	cout<<NONE<<"‚û§ ËæìÂÖ•sËøõÂÖ•Ë∂ÖÁ∫ßÁî®Êà∑Ê®°ÂºèÔºåËæìÂÖ•ÂÖ∂‰ªñËøõÂÖ•ËÆøÂÆ¢Ê®°Âºè:";
	char tmp_char0 = getchar();
	if(tmp_char0=='s') 
	{
		cout<<"‚û§ ÁÆ°ÁêÜÂëòÁî®Êà∑Âêç:";
		char tmp_name[20];
		memset(tmp_name, 0, 20*sizec);
		cin>>tmp_name;
		if(strcmp(tmp_name, root_name)!=0)
		{
			cout<<RED"‚û§ ‚ùå Áî®Êà∑ÂêçÈîôËØØ\n"<<NONE;
			exit(1);
		}
		root_check();
		system("figlet welcome!");
		sleep(2);
		gui_main();
		}
	else gui_guest();	
	
}


//foos
void gui_main()
{
	system("clear");
	system("figlet version 1.0 beta");
		cout<<"|---------------------------------------------|"<<endl;
			cout<<"|=============================================|"<<endl;
			cout<<"|----------------Â∑• ËµÑ ÁÆ° ÁêÜ Á≥ª Áªü------------|"<<endl;
			cout<<"|----------------1. ÈÉ® Èó® ‰ø° ÊÅØ---------------|"<<endl;
			cout<<"|----------------2. Â≤ó‰Ωç‰ø°ÊÅØÂèäÂàÜÁ∫ß -----------|"<<endl;
			cout<<"|----------------3. ÂëòÂ∑•Âü∫Êú¨‰ø°ÊÅØ -------------|"<<endl;
			cout<<"|----------------4. ÂºÄ Èô§ Âëò Â∑•---------------|"<<endl;
			cout<<"|----------------5. Â∑• ËµÑ ‰ø° ÊÅØ---------------|"<<endl;
			cout<<"|----------------6. ÈÄÄ Âá∫ Á≥ª Áªü---------------|"<<endl;
			cout<<"|=============================================|"<<endl;
			cout<<"|---------------------------------------------|"<<endl;
			cout<<"‚û§ üç∫ ÊÇ®ÈÄâÊã©:";		char tmp;
		cin>>tmp;
		while (tmp >'6' || tmp <'1'){
			cout<<"‚û§ ‚ùå ËæìÂÖ•ÈîôËØØ ["<<tmp<<"]‰∏çÊòØ‰∏Ä‰∏™ÂêàÊ≥ïÁöÑÈÄâÈ°π\n";
			cout<<"‚û§ üç∫ ËØ∑ÈáçÊñ∞ËæìÂÖ•:";
			cin>>tmp;
		}
		cout<<"‚û§ üçªËæìÂÖ•Ê≠£Á°Æ "<<"["<<tmp<<"]\n";
		fflush(stdin);
		switch (tmp) {
			case '1':
				{
				BMinfo();
				}break;
			case '2':
				{
				GWinfo();
				}break;
			case '3':
				{
				graph_worker();	
				}break;
			case '4':
				{
//				root_check();
				deleteworker();		
				}break;
			case '5':
				{
				output_salary();	
				}break;
			case '6':
				{
				fclose(fp);
				exit(0);	
				}break;	
		}
		
}

void addinfo(int n)
	{
//		root_check();
		int test = 0;
		for(int i= 0 ; test < n && i < MAXWORKER  ; i++)
		{
			if (someworker[i].wkid[0] !='\0' ) 
				continue;
			memset(someworker[i].wkid,0,20*sizeof(char));
			id_checker(i);
			std::cout<<"‚û§ ËØ∑ËæìÂÖ•ÂßìÂêç:(ËØ∑‰ΩøÁî®ÊãºÈü≥):";
			memset(someworker[i].wkname,0,20*sizeof(char));
			std::cin>>someworker[i].wkname;
			std::cout<<"‚û§ ËØ∑ËæìÂÖ•ÊÄßÂà´: 0Êàñ1(ÂàÜÂà´‰ª£Ë°®Áî∑/Â•≥)";
			char tmp;
			cin>>tmp;
			while (tmp >'1' || tmp <'0') {
				cout<<"‚û§ ‚ùå ËæìÂÖ•ÈîôËØØ ËØ∑Ê£ÄÊü•Âπ∂ÈáçÊñ∞ËæìÂÖ•:";
				cin>>tmp;
			}
			someworker[i].wksex = tmp -'0';	
			std::cout<<"‚û§ ËØ∑ËæìÂÖ•ÂëòÂ∑•ÁîüÊó•  Âπ¥-Êúà-Êó•:";
			memset(someworker[i].wkbirth,0,13*sizeof(char));
			std::cin>>someworker[i].wkbirth;
			std::cout<<"‚û§ ËØ∑ËæìÂÖ•ÂëòÂ∑•ÂÖ•ËÅåÊó•Êúü  Âπ¥-Êúà-Êó•:";
			memset(someworker[i].fstdate,0,13*sizeof(char));
			std::cin>>someworker[i].fstdate;
			std::cout<<"‚û§ ËØ∑ËæìÂÖ•ÂëòÂ∑•ÈÉ®Èó®ÁºñÂè∑:";
			memset(someworker[i].wkBM,0,50*sizeof(char));
			memset(someworker[i].wkGW,0,50*sizeof(char));
			memset(someworker[i].wkemail,0,20*sizeof(char));
			memset(someworker[i].wkaddress,0,50*sizeof(char));
			memset(someworker[i].wkphonenumber,0,20*sizeof(char));
			std::cin>>someworker[i].wkBMnum;
			std::cout<<"‚û§ ËØ∑ËæìÂÖ•ÂëòÂ∑•ÈÉ®Èó®ÂêçÁß∞:";
			std::cin>>someworker[i].wkBM;
			std::cout<<"‚û§ ËØ∑ËæìÂÖ•ÂëòÂ∑•Â≤ó‰ΩçÁºñÂè∑ (Â≤ó‰ΩçÁºñÂè∑‰ª£Ë°®Â≤ó‰ΩçÁ≠âÁ∫ß Áî±‰ΩéÂà∞È´ò ÊúÄ‰Ωé‰∏∫1) : ";
			std::cin>>someworker[i].wkGWnum;
			std::cout<<"‚û§ ËØ∑ËæìÂÖ•ÂëòÂ∑•Â≤ó‰ΩçÂêçÁß∞:";
			std::cin>>someworker[i].wkGW;
			std::cout<<"‚û§ ËØ∑ËæìÂÖ•Â≤ó‰ΩçÂü∫Êú¨Â∑•ËµÑ:";
			std::cin>>someworker[i].essential_salary;
			std::cout<<"‚û§ ËØ∑ËæìÂÖ•Â≤ó‰ΩçÂ∑•ËµÑÁ≥ªÊï∞:";
			std::cin>>someworker[i].GWsalary_level;
			std::cout<<"‚û§ ËØ∑ËæìÂÖ•‰∏™‰∫∫Á®éÁéá:(Â¶Ç10%Âç≥ËæìÂÖ•0.1)";
			std::cin>>someworker[i].tax_rate;
			std::cout<<"‚û§ ËØ∑ËæìÂÖ•Â•ñÈáëÂíåÂä†Áè≠Ë¥πÁöÑÂíå:(È¢ùÂ§ñÂ∑•ËµÑ)";
			std::cin>>someworker[i].extra_salary;
			std::cout<<"‚û§ ËØ∑ËæìÂÖ•ÂëòÂ∑•ÂÆ∂Â∫≠Âú∞ÂùÄ:";
			std::cin>>someworker[i].wkaddress;
			std::cout<<"‚û§ ËØ∑ËæìÂÖ•ÂëòÂ∑•ÁîµËØù:";
			std::cin>>someworker[i].wkphonenumber;
			std::cout<<"‚û§ ËØ∑ËæìÂÖ•ÂëòÂ∑•Â∑•‰ΩúÈÇÆÁÆ±:";
			std::cin>>someworker[i].wkemail;
			std::cout<<"‚û§ ËØ∑ËæìÂÖ•ÂëòÂ∑•ÂØÜÁ†Å:";
			memset(someworker[i].pswd, 0, 20*sizeof(char));
			std::cin>>someworker[i].pswd;
			someworker[i].wksalary = someworker[i].essential_salary * someworker[i].GWsalary_level + someworker[i].extra_salary;
			someworker[i].factsalary = someworker[i].wksalary * (0.75 - someworker[i].tax_rate) - 2;
			std::cout<<"‚û§ üçª\n";
			sleep(1);
			test++;
		}
		fclose(fp);
		fp = fopen("misinfo.dat", "wb+");
		rewind(fp);
		for (int i = 0;i< MAXWORKER; i++)  {
			fwrite(&someworker[i], size, 1, fp);
		}
		fclose(fp);
		fp =fopen("misinfo.dat", "a+b");
}

void id_checker(int i)
{
	label1: char tempid[20];
	memset(tempid, 0, 20*sizeof(char));
	std::cout<<"‚û§ üç∫ËØ∑ËæìÂÖ•Â∑•Âè∑:";
	std::cin>>tempid;
	for(int c = 0; c < MAXWORKER ; c++)
	{
		if(c == i) continue;
		if(someworker[c].wkid[0]=='\0')
		continue;
		if(strcmp(someworker[c].wkid,tempid)==0)
		{
			std::cout<<"‚û§ ‚ùåÂ∑•Âè∑ÈáçÂ§çÔºÅËØ∑ÈáçÊñ∞ËæìÂÖ•!\n";
			goto label1;
		}
	}
	strcpy(someworker[i].wkid, tempid);
	std::cout<<"‚û§ üçªËæìÂÖ•ÊàêÂäüÔºÅÂ∑•Âè∑:"<<someworker[i].wkid<<"\n";		
}

void graph_worker()
{
	system("clear");
	std::cout<<"‚û§					ÂëòÂ∑•Âü∫Êú¨‰ø°ÊÅØ\n";
	int count2 = 0;
	for (int i = 0 ; i < MAXWORKER ; i++)
	if (someworker[i].wkid[0]!='\0') count2++;
	std::cout<<"‚û§		ÁõÆÂâçÊúâ"<<count2<<"‰∏™ÂëòÂ∑•\n";
	std::cout<<"‚û§		1.Â¢ûÂä†ÂëòÂ∑•‰ø°ÊÅØ\n";
	std::cout<<"‚û§		2.ÊµèËßàÂÖ®ÈÉ®ÂëòÂ∑•‰ø°ÊÅØ\n";
	std::cout<<"‚û§		3.Êü•ÊâæÂëòÂ∑•‰ø°ÊÅØ\n";
	std::cout<<"‚û§		4.‰øÆÊîπÂëòÂ∑•‰ø°ÊÅØ\n";
	std::cout<<"‚û§		0.ÈÄÄÂá∫Âà∞‰∏ä‰∏ÄÂ±Ç\n";
	std::cout<<"\n";
	char choose;
	cout<<"‚û§ üç∫ËØ∑ÈÄâÊã©:";
	cin>>choose;
	while (choose < '0' || choose > '4')
	{
		cout<<"‚û§ ‚ùå ËæìÂÖ•ÈîôËØØ ["<<choose<<"]‰∏çÊòØÂêàÊ≥ïÈÄâÈ°π\n";
		cout<<"‚û§ üç∫ ËØ∑ÈáçÊñ∞ËæìÂÖ•:";
		cin>>choose;
	}
	cout<<"‚û§ üçª\n";
	fflush(stdin);
	switch (choose) {
		case '1':{
			std::cout<<"‚û§ ËØ∑ËæìÂÖ•ÈúÄË¶ÅÂ¢ûÂä†ÁöÑÂëòÂ∑•Êï∞:"<<NONE;
			int n; std::cin>>n;
			addinfo(n);
		}break;
		case '0':{
			gui_main();
		}break;
		case '2':{
			system("clear");
			cout<<"‚û§		üç∫ ËØ∑ÈÄâÊã©Ê®°Âºè\n";
			cout<<"‚û§		1.ÂÆ°Êü•Ê®°Âºè\n";
			cout<<"‚û§		2.ÊµèËßàÊ®°Âºè\n";
			char tmp_char1;
			cout<<"‚û§ üç∫ÊÇ®ÈÄâÊã©:";
			cin>>tmp_char1;
			while(tmp_char1 > '2' || tmp_char1 < '1')
			{
				cout<<"‚û§ ‚ùå ËæìÂÖ•ÈîôËØØ\n‚û§ ÊÇ®ÈÄâÊã©:";
				cin>>tmp_char1;
			}
			cout << "‚û§ üçª\n";		
			for(int i=0;i < MAXWORKER; i++)
			{
				if(someworker[i].wkid[0] =='\0') continue;
				 std::cout<<"‚û§\n";
				for(int i2=1;i2<=18;i2++)
				{
				output_info(i, i2);
				}
				std::cout<<"‚û§\n";
				if (tmp_char1 == '1') sleep(3);
			}
		}break;	
		case '3':{
			searchforinfo();
			
		}break;
		case '4':{
			changeinfo();
		}break;
	}
	cout<<"‚û§ üç∫ ËæìÂÖ•‰ªªÊÑèÂ≠óÁ¨¶ÁªßÁª≠(ÂõûËΩ¶ÈîÆÈô§Â§ñ):";
	char t;
	cin>>t;
	gui_main();
}

void output_info(int i,int n) //i‰∏∫Á¨¨Âá†‰∏™ÂëòÂ∑•„ÄÅn‰∏∫Á¨¨Âá†È°π‰ø°ÊÅØ
	{
		switch(n)
		{
			
				case 1:{
					std::cout<<"‚û§ Â∑•Âè∑:";
					puts(someworker[i].wkid);
					}
					break;
				case 2:{
					std::cout<<"‚û§ ÂßìÂêç:";
					puts(someworker[i].wkname);
				//std::cout<<strlen(someworker[i].wkname)<<"\n";
					}break;
				case 3:{
					std::cout<<"‚û§ ÊÄßÂà´:";
					if(someworker[i].wksex==0)
					std::cout<<"Áî∑\n";
					else 
					std::cout<<"Â•≥\n";
				}
				break;
				case 4:
					{
						std::cout<<"‚û§ ÁîüÊó•:";
						puts(someworker[i].wkbirth);
					}break;
				case 5:
					{
						std::cout<<"‚û§ ÂÖ•ËÅåÊó∂Èó¥:";
						puts(someworker[i].fstdate);
						}break;
				case 6:{
					std::cout<<"‚û§ ÈÉ®Èó®ÁºñÂè∑:";
					std::cout<<someworker[i].wkBMnum<<"\n";}break;
				case 7 :{
					std::cout<<"‚û§ ÈÉ®Èó®ÂêçÁß∞:";
					puts(someworker[i].wkBM);}
				 break;
				case 8:{
					std::cout<<"‚û§ Â≤ó‰ΩçÁºñÂè∑(Á≠âÁ∫ß):";
					std::cout<<someworker[i].wkGWnum<<"\n";}
				break;
				case 9:{
					std::cout<<"‚û§ Â≤ó‰ΩçÂêçÁß∞:";
					puts(someworker[i].wkGW);}break;
				case 10:{
					std::cout<<"‚û§ ÂëòÂ∑•Âú∞ÂùÄ:";
					puts(someworker[i].wkaddress);}
				break;
				case 11:{
					std::cout<<"‚û§ ÁîµËØùÂè∑Á†Å:";
					std::cout<<someworker[i].wkphonenumber<<"\n";} break;
				case 12:{
					std::cout<<"‚û§ ÁîµÂ≠êÈÇÆÁÆ±:";
					puts(someworker[i].wkemail);}break;
				case 13:{
					std::cout<<"‚û§ Â≤ó‰ΩçÂü∫Êú¨Â∑•ËµÑ:";
					std::cout<<someworker[i].essential_salary<<"\n";
				}break;
				case 14:{
					std::cout<<"‚û§ Â≤ó‰ΩçÂ∑•ËµÑÁ≥ªÊï∞Ôºö";
					std::cout<<someworker[i].GWsalary_level<<"\n";
				}break;
				case 15:{
					std::cout<<"‚û§ ‰∏™‰∫∫Á®éÁéá:"<<someworker[i].tax_rate<<"\n";
				}break;
				case 16:{
					std::cout<<"‚û§ È¢ùÂ§ñÂ∑•ËµÑ:"<<someworker[i].extra_salary<<"\n";
				}break;
				case 17:{
					std::cout<<"‚û§ Â∫îÂèëÂ∑•ËµÑ:"<<someworker[i].wksalary<<"\n";
					std::cout<<"‚û§ ÂÆûÂèëÂ∑•ËµÑ:"<<someworker[i].factsalary<<"\n";
				}break;
				case 18:{
					std::cout<<"‚û§ ÂëòÂ∑•ÂØÜÁ†Å:"<<someworker[i].pswd<<"\n";
				}break;		
		}
}

int findinfo_string(int i,char info[]) 
{
	int count4 = MAXWORKER;
	int found = 0;
	switch(i)				
	{
		case 1:{
		for(int i2=0 ; i2< count4 ; i2++)
		{
			if(someworker[i2].wkid[0]=='\0') continue;
			if( strcmp(info,someworker[i2].wkid)==0 )
			{
			std::cout<<"‚û§üçª\n";
			std::cout<<"‚û§		ÂßìÂêç:"<<someworker[i2].wkname<<"\n";
			std::cout<<"‚û§		Â∑•Âè∑:"<<someworker[i2].wkid<<"\n";
			found = 1;
			return i2;		
			}
		} 
		if(found == 0) std::cout<<RED<<"‚û§ ‚ùå Êú™ÊâæÂà∞Áõ∏Â∫î‰ø°ÊÅØ.\n"<<NONE;
		}break;
		case 2:	{
		for(int i2=0;i2<count4;i2++)
		{
			if(someworker[i2].wkid[0]=='\0') continue;
			if(strcmp(info,someworker[i2].wkname)==0)
			{
				cout<<"‚û§ üçª\n";
				std::cout<<"‚û§		ÂßìÂêç:"<<someworker[i2].wkname<<"\n";
				std::cout<<"‚û§		Â∑•Âè∑Ôºö"<<someworker[i2].wkid<<"\n";
				found = 1;
			}
		}
		if(found == 0) std::cout<<RED<<"‚û§ ‚ùå Êú™ÊâæÂà∞Áõ∏Â∫î‰ø°ÊÅØ.\n"<<NONE;
				}break;
		case 4:{
			
			for(int i2=0;i2<count4;i2++)
			{
				if(someworker[i2].wkid[0]=='\0') continue;
				if(strcmp(info,someworker[i2].wkbirth)==0)
				{
					cout<<"‚û§ üçª\n";
					std::cout<<"‚û§		ÊâæÂà∞ÁîüÊó•‰∏∫Ôºö"<<info<<"ÁöÑËÅåÂ∑•\n";
					std::cout<<"‚û§		"<<someworker[i2].wkname<<"\n";
					std::cout<<"‚û§		ËØ•ÂëòÂ∑•Â∑•Âè∑:"<<someworker[i2].wkid<<"\n";
					found = 1;
				}
			}
			if(found == 0) std::cout<<RED<<"‚û§ ‚ùå Êú™ÊâæÂà∞Áõ∏Â∫î‰ø°ÊÅØ.\n"<<NONE;		
			}break;
			case 5:{
				for(int i2=0;i2<count4;i2++)
				{
					if(someworker[i2].wkid[0]=='\0') continue;
					if(strcmp(info,someworker[i2].fstdate)==0)
					{
						cout<<"‚û§ üçª\n";
						std::cout<<"‚û§		ÊâæÂà∞ÂÖ•ËÅåÊó∂Èó¥‰∏∫:"<<info<<"ÁöÑÂëòÂ∑•\n";
						std::cout<<"‚û§		Â∑•Âè∑:"<<someworker[i2].wkid<<"\n";
						std::cout<<"‚û§		ÂßìÂêç:"<<someworker[i2].wkname<<"\n";
						found = 1;
					}
				}
				if(found == 0) std::cout<<RED<<"‚û§ ‚ùå Êú™ÊâæÂà∞Áõ∏Â∫î‰ø°ÊÅØ.\n"<<NONE;
			}break;
				case 7:
					{
					std::cout<<"‚û§		ÈÉ®Èó®Ôºö"<<info<<"\n";
					for(int i2=0;i2<count4;i2++)
					{
						if(someworker[i2].wkid[0]=='\0') continue;
						if(strcmp(info,someworker[i2].wkBM)==0)
						{
							cout<<"‚û§ üçª\n";
							std::cout<<"‚û§		ÂßìÂêç"<<someworker[i2].wkname<<"\n";
						std::cout<<"‚û§		Â∑•Âè∑:"<<someworker[i2].wkid<<"\n";	
						found = 1;
						return i2;
						}
					}
				if(found == 0) std::cout<<RED<<"‚û§ ‚ùå Êú™ÊâæÂà∞Áõ∏Â∫î‰ø°ÊÅØ.\n"<<NONE;
					}break;
				case 9:
					{
					std::cout<<"‚û§		Â≤ó‰ΩçÔºö"<<info<<std::endl;
					int i2;
					for( i2=0;i2<count4;i2++)
					{
						if(someworker[i2].wkid[0]=='\0') continue;
						if(strcmp(info, someworker[i2].wkGW)==0)
						{
							cout<<"‚û§ üçª\n";
							std::cout<<"‚û§		ÂßìÂêç:"<<someworker[i2].wkname;
							std::cout<<"\n";
							std::cout<<"‚û§		Â∑•Âè∑:"<<someworker[i2].wkid<<"\n";
							found =1 ;
						}
					}
					if (found== 1)return i2;
				if(found == 0) std::cout<<RED<<"‚û§ ‚ùå Êú™ÊâæÂà∞Áõ∏Â∫î‰ø°ÊÅØ.\n"<<NONE;
				}break;
				case 10:
					{
					for(int i2=0;i2<count4;i2++)
					{
						if(someworker[i2].wkid[0]=='\0') continue;
						if(strcmp(info, someworker[i2].wkaddress)==0)
						{
							cout<<"‚û§ üçª\n";
							std::cout<<"‚û§		ÂßìÂêç:"<<someworker[i2].wkname;
							std::cout<<"\n";
							std::cout<<"‚û§		Â∑•Âè∑:"<<someworker[i2].wkid<<"\n";
							found = 1;
							return i2;
						}
					}
					if(found == 0) std::cout<<RED<<"‚û§ ‚ùå Êú™ÊâæÂà∞Áõ∏Â∫î‰ø°ÊÅØ.\n"<<NONE;					}break;
				case 11:
					{
					for(int i2=0;i2<count4;i2++)
					{
						if(someworker[i2].wkid[0]=='\0') continue;
						if(strcmp(info, someworker[i2].wkphonenumber)==0)
						{
							cout<<"‚û§ üçª\n";
							std::cout<<"‚û§		ÂßìÂêç:"<<someworker[i2].wkname;
							std::cout<<"\n";
							std::cout<<"‚û§		Â∑•Âè∑:"<<someworker[i2].wkid<<"\n";
							found = 1;
							return i2;
						}
						}
						if(found == 0) std::cout<<RED<<"‚û§ ‚ùå Êú™ÊâæÂà∞Áõ∏Â∫î‰ø°ÊÅØ.\n"<<NONE;
					}break;
				case 12:
					{
					for(int i2=0;i2<count4;i2++)
					{
						if(someworker[i2].wkid[0]=='\0') continue;
						if(strcmp(info, someworker[i2].wkemail)==0)
						{
							cout<<"‚û§ üçª\n";
							std::cout<<"‚û§		"<<info<<std::endl;
							std::cout<<"‚û§		ÂßìÂêç:"<<someworker[i2].wkname;
							std::cout<<"\n";
							std::cout<<"‚û§		Â∑•Âè∑:"<<someworker[i2].wkid<<"\n";
							found = 1;
							return i2;
						}		
					}
					if(found == 0) std::cout<<RED<<"‚û§ ‚ùå Êú™ÊâæÂà∞Áõ∏Â∫î‰ø°ÊÅØ.\n"<<NONE;
					}break;
				}
				return -1;
}

void deleteworker()
{
	std::cout<<"‚û§ ËØ∑ËæìÂÖ•Ë¶ÅÂà†Èô§ÂëòÂ∑•ÁöÑÂ∑•Âè∑:";
	char info[20];
	memset(info, 0, 20*sizeof(char));
	std::cin>>info;
	rewind(fp);
			int findyes = 0;
			for(int i2=0;i2< MAXWORKER ;i2++)
			{
				if(strcmp(info,someworker[i2].wkid)==0)
				{
		std::cout<<"‚û§ "<<someworker[i2].wkname<<"\n";
				std::cout<<"‚û§	Â∑•Âè∑:"<<someworker[i2].wkid<<"\n";
				std::cout<<"‚û§	ÂßìÂêç:"<<someworker[i2].wkname<<"\n";
				memset(someworker[i2].wkid, 0, 20*sizeof(char));
				memset(someworker[i2].wkname, 0, 20*sizeof(char));
				memset(someworker[i2].wkbirth, 0, 13*sizeof(char));
				memset(someworker[i2].fstdate, 0, 13*sizeof(char));
				memset(someworker[i2].wkBM, 0, 50*sizeof(char));
				memset(someworker[i2].wkGW, 0, 50*sizeof(char));
				memset(someworker[i2].wkaddress, 0, 50*sizeof(char));
				memset(someworker[i2].wkphonenumber, 0, 20*sizeof(char));
				memset(someworker[i2].wkemail, 0, 20*sizeof(char));
				memset(someworker[i2].BMJJ, 0, 200*sizeof(char));
				memset(someworker[i2].GWZZ,0,200*sizec);
				memset(someworker[i2].pswd, 0, 20*sizeof(char));
				someworker[i2].wksalary = 0;
				someworker[i2].extra_salary = 0;
				someworker[i2].tax_rate = 0;
				someworker[i2].factsalary = 0;
				someworker[i2].wkBMnum = 0;
				someworker[i2].wkGWnum = 0;
				findyes = 1;
				}
			}
			if(findyes == 0) std::cout<<RED<<"‚û§ Êú™ÊâæÂà∞Â∑•Âè∑‰∏∫"<<info<<"ÁöÑÂëòÂ∑•!\n"<<NONE;
			else std::cout<<GREEN<<"‚û§ Âà†Èô§ÊàêÂäü!\n"<<NONE;
			fclose(fp);
			fp = fopen("misinfo.dat", "wb+");
			rewind(fp);
		for(int i=0;i< MAXWORKER ;i++)
		{
			fwrite(&someworker[i], size, 1, fp);
		}
		fclose(fp);
		fp = fopen("misinfo.dat","a+b");
		fflush(stdin);
		sleep(3);
		gui_main();
}

void root_check()
{
	fflush(stdin);
	char tmp_pass[20];
	char *p;
	p = getpass("‚û§ ËØ∑ËæìÂÖ•ÁÆ°ÁêÜÂëòÂØÜÁ†Å:");
	strcpy(tmp_pass, p);
if(strcmp(root_pass,tmp_pass)==0) ;
else {
	cout<<RED<<"‚ùå ÂØÜÁ†ÅÈîôËØØ\n"<<NONE;
	 sleep(1); 
	exit(0);
}
		
}

void output_salary()
{
	system("clear");
	std::cout<<GREEN<<"‚û§			1.ÂÆ°Êü•Ê®°Âºè\n";
	std::cout<<NONE<<"‚û§			2.ÊµèËßàÊ®°Âºè\n";
	char c;
	cout<<"‚û§ üç∫ËØ∑ÈÄâÊã©:";
	cin>>c;
	fflush(stdin);
	while (c >'2' || c <'1')
	{
		cout<<"‚û§ ‚ùå ËæìÂÖ•ÈîôËØØ\n‚û§ ËØ∑ÈáçÊñ∞ËæìÂÖ•:";
		cin>>c;
	}
	for(int i = 0 ; i < MAXWORKER ; i++)
	{
		if(someworker[i].wkid[0]=='\0') continue;
		output_info(i, 1);
		output_info(i, 2);
		output_info(i, 17);
		std::cout<<"‚û§ üçª\n";
		if(c == '1') sleep(1);
	}
	cout<<"‚û§ üç∫ ËæìÂÖ•‰ªªÊÑèÂ≠óÁ¨¶ÁªßÁª≠(ÂõûËΩ¶ÈîÆÈô§Â§ñ):";
	char t;
	cin >> t;
	gui_main();
}

void changeinfo()
{
	system("clear");
	std::cout<<"---                 1.‰øÆÊîπÂ∑•Âè∑\n";
	std::cout<<"---                 2.‰øÆÊîπÂßìÂêç\n";
	std::cout<<"---                 3.‰øÆÊîπÁîüÊó•\n";
	std::cout<<"---                 4.‰øÆÊîπÂÖ•ËÅåÊó•Êúü\n";
	std::cout<<"---                 5.‰øÆÊîπÂ≤ó‰Ωç\n";
	std::cout<<"---                 6.‰øÆÊîπÂ≤ó‰ΩçÁºñÂè∑(Á≠âÁ∫ß)\n";
	std::cout<<"---                 7.‰øÆÊîπÈÉ®Èó®\n";
	std::cout<<"---                 8.‰øÆÊîπÈÉ®Èó®ÁºñÂè∑\n";
	std::cout<<"---                 9.‰øÆÊîπÁîµËØù\n";
	std::cout<<"---                 10.‰øÆÊîπÁîµÂ≠êÈÇÆÁÆ±\n";
	std::cout<<"---                 11.‰øÆÊîπ‰ΩèÂùÄ\n";
	std::cout<<"---                 12.‰øÆÊîπÂ≤ó‰ΩçÂü∫Êú¨Â∑•ËµÑ\n";
	std::cout<<"---                 13.‰øÆÊîπÂ≤ó‰ΩçÂ∑•ËµÑÁ≥ªÊï∞\n";
	std::cout<<"---                 14.‰øÆÊîπ‰∏™‰∫∫Á®éÁéá\n";
	std::cout<<"---                 15.‰øÆÊîπÈ¢ùÂ§ñÂ∑•ËµÑ\n";
	std::cout<<"---                 16.‰øÆÊîπÂØÜÁ†Å\n";
	std::cout<<"---                 0.ËøîÂõû‰∏ä‰∏ÄÂ±Ç\n";
	std::cout<<"‚û§ üç∫ ËØ∑ÈÄâÊã©:";
	int mode = 0 ;
	std::cin>>mode;
	if (mode == 0 )graph_worker();
	std::cout<<"‚û§ üçª ËØ∑ËæìÂÖ•Âç≥Â∞ÜÊìç‰ΩúÁöÑÂ∑•Âè∑Ôºö";
	char info[20];
	memset(info, 0, 20*sizeof(char));
	std::cin>>info;
	int test = findinfo_string(1, info);
	if(test == -1)
	{
		std::cout<<RED"‚û§ ‚ùå Êú™ÊâæÂà∞Â∑•Âè∑ÔºÅ\n\n"<<NONE;
		graph_worker();
	}
//	root_check();
	switch(mode)
	{
		case 1:
			{
			std::cout<<"‚û§ üç∫ ËØ∑ËæìÂÖ•Êñ∞ÁöÑÂ∑•Âè∑:";
			char newid[20];
			memset(newid, 0, 20*sizeof(char));
			std::cin>>newid;
			strcpy(someworker[test].wkid, newid);
		std::cout<<GREEN<<"‚û§ üçª ‰øÆÊîπÊàêÂäüÔºÅ"<<"Â∑•Âè∑:"<<someworker[test].wkid<<"\n"<<NONE;
			}break;
		case 2:
			{
			std::cout<<"‚û§ üç∫ ËØ∑ËæìÂÖ•Êñ∞ÁöÑÂßìÂêç:";
			char newid[200];
			memset(newid, 0, 200*sizeof(char));
			std::cin>>newid;
			strcpy(someworker[test].wkname, newid);
	std::cout<<GREEN"‚û§ üçª ‰øÆÊîπÊàêÂäüÔºÅ"<<"ÂßìÂêç:"<<someworker[test].wkname<<"\n"<<NONE;			
			}break;
		case 3:
			{
			std::cout<<"‚û§ üç∫ ËØ∑ËæìÂÖ•Êñ∞ÁöÑÁîüÊó•:";
			char newid[200];
			memset(newid, 0, 200*sizeof(char));
			std::cin>>newid;
			strcpy(someworker[test].wkbirth, newid);
		std::cout<<GREEN<<"‚û§ üçª ‰øÆÊîπÊàêÂäüÔºÅ"<<"ÁîüÊó•:"<<someworker[test].wkbirth<<"\n"<<NONE;
			}break;
		case 4:
			{
			std::cout<<"‚û§ üç∫ËØ∑ËæìÂÖ•Êñ∞ÁöÑÂÖ•ËÅåÊó•Êúü:";
			char newid[200];
			memset(newid, 0, 200*sizeof(char));
			std::cin>>newid;
			strcpy(someworker[test].fstdate, newid);
		std::cout<<GREEN<<"‚û§ üçª‰øÆÊîπÊàêÂäüÔºÅ"<<"ÂÖ•ËÅåÊó•Êúü:"<<someworker[test].fstdate<<"\n"<<NONE;	
			}break;
		case 5:
			{
			std::cout<<"‚û§ üç∫ËØ∑ËæìÂÖ•Êñ∞ÁöÑÂ≤ó‰Ωç:";
			char newid[200];
			memset(newid, 0, 200*sizeof(char));
			std::cin>>newid;
			strcpy(someworker[test].wkGW, newid);
		std::cout<<GREEN<<"‚û§ üçª ‰øÆÊîπÊàêÂäüÔºÅ"<<"Â≤ó‰Ωç:"<<someworker[test].wkGW<<"\n"<<NONE;
			}break;
		case 6:
			{
			std::cout<<"‚û§ üç∫ ËØ∑ËæìÂÖ•Êñ∞ÁöÑÂ≤ó‰ΩçÁºñÂè∑:";
			std::cin>>someworker[test].wkGWnum;
			std::cout<<GREEN<<"‚û§ üçª ‰øÆÊîπÊàêÂäüÔºÅÂ≤ó‰ΩçÁºñÂè∑:"<<someworker[test].wkGWnum<<"\n"<<NONE;	
			}break;
		case 7:
			{
			std::cout<<"‚û§ üç∫ËØ∑ËæìÂÖ•Êñ∞ÁöÑÈÉ®Èó®:";
			char newid[200];
			memset(newid, 0, 200*sizeof(char));
			std::cin>>newid;
			strcpy(someworker[test].wkBM, newid);
		std::cout<<GREEN"‚û§ üçª ‰øÆÊîπÊàêÂäüÔºÅ"<<"ÈÉ®Èó®:"<<someworker[test].wkBM<<"\n"<<NONE;	
			}break;
		case 8:
			{
			std::cout<<"‚û§ üç∫ ËØ∑ËæìÂÖ•Êñ∞ÁöÑÈÉ®Èó®ÁºñÂè∑:";
			std::cin>>someworker[test].wkBMnum;
			std::cout<<GREEN<<"‚û§ üçª ‰øÆÊîπÊàêÂäüÔºÅÈÉ®Èó®ÁºñÂè∑:"<<someworker[test].wkBMnum<<"\n"<<NONE;
			}break;
		case 9:
			{
			std::cout<<"‚û§ üç∫ ËØ∑ËæìÂÖ•Êñ∞ÁöÑÁîµËØù:";
			char newid[200];
			memset(newid, 0, 200*sizeof(char));
			std::cin>>newid;
			strcpy(someworker[test].wkphonenumber, newid);
		std::cout<<GREEN<<"‚û§ üçª ‰øÆÊîπÊàêÂäüÔºÅ"<<"ÁîµËØù:"<<someworker[test].wkphonenumber<<"\n"<<NONE;		
			}break;
		case 10:
			{
				std::cout<<"‚û§ üç∫ ËØ∑ËæìÂÖ•Êñ∞ÁöÑÁîµÂ≠êÈÇÆÁÆ±:";
				char newid[200];
				memset(newid, 0, 200*sizeof(char));
				std::cin>>newid;
				strcpy(someworker[test].wkemail, newid);
			std::cout<<GREEN"‚û§ üçª ‰øÆÊîπÊàêÂäüÔºÅ"<<"ÈÉ®Èó®:"<<someworker[test].wkemail<<"\n"<<NONE;	
			}break;
		case 11:
			{
				std::cout<<"‚û§ üç∫ ËØ∑ËæìÂÖ•Êñ∞ÁöÑ‰ΩèÂùÄ:";
				char newid[200];
				memset(newid, 0, 200*sizeof(char));
				std::cin>>newid;
				strcpy(someworker[test].wkaddress, newid);
			std::cout<<GREEN"‚û§ üçª ‰øÆÊîπÊàêÂäüÔºÅ"<<"ÈÉ®Èó®:"<<someworker[test].wkaddress<<"\n"<<NONE;	
			}break;
		case 12:{
				std::cout<<"‚û§ üç∫ ËØ∑ËæìÂÖ•Êñ∞ÁöÑÂ≤ó‰ΩçÂü∫Êú¨Â∑•ËµÑ:";
				std::cin>>someworker[test].essential_salary;
				std::cout<<GREEN<<"‚û§ üçª ‰øÆÊîπÊàêÂäüÔºÅ"<<"Â≤ó‰ΩçÂü∫Êú¨Â∑•ËµÑ:"<<someworker[test].essential_salary<<"\n"<<NONE;
				someworker[test].wksalary = someworker[test].essential_salary * someworker[test].GWsalary_level + someworker[test].extra_salary;
				someworker[test].factsalary = someworker[test].wksalary * (0.75 - someworker[test].tax_rate) - 2;
		}break;
		case 13:{
				std::cout<<"‚û§ üç∫ ËØ∑ËæìÂÖ•Êñ∞ÁöÑÂ≤ó‰ΩçÂ∑•ËµÑÁ≥ªÊï∞:";
				std::cin>>someworker[test].GWsalary_level;
				std::cout<<GREEN"‚û§ üçª ‰øÆÊîπÊàêÂäüÔºÅÂ≤ó‰ΩçÂ∑•ËµÑÁ≥ªÊï∞:"<<someworker[test].GWsalary_level<<"\n"<<NONE;
				someworker[test].wksalary = someworker[test].essential_salary * someworker[test].GWsalary_level + someworker[test].extra_salary;
				someworker[test].factsalary = someworker[test].wksalary * (0.75 - someworker[test].tax_rate) - 2;
		}break;
		case 14:
			{
				std::cout<<"‚û§ üç∫ ËØ∑ËæìÂÖ•Êñ∞ÁöÑ‰∏™‰∫∫Á®éÁéá:";
				std::cin>>someworker[test].tax_rate;
				std::cout<<GREEN<<"‚û§ üçª ‰øÆÊîπÊàêÂäüÔºÅ‰∏™‰∫∫Á®éÁéá:"<<someworker[test].tax_rate<<"\n"<<NONE;
				someworker[test].wksalary = someworker[test].essential_salary * someworker[test].GWsalary_level + someworker[test].extra_salary;
				someworker[test].factsalary = someworker[test].wksalary * (0.75 - someworker[test].tax_rate) - 2;
			}break;
		case 15:{
			std::cout<<"‚û§ üç∫ ËØ∑ËæìÂÖ•Êñ∞ÁöÑÈ¢ùÂ§ñÂ∑•ËµÑ:";
			std::cin>>someworker[test].extra_salary;
			std::cout<<GREEN"‚û§ üçª ‰øÆÊîπÊàêÂäüÔºÅÈ¢ùÂ§ñÂ∑•ËµÑ:"<<someworker[test].extra_salary<<"\n"<<NONE;
			someworker[test].wksalary = someworker[test].essential_salary * someworker[test].GWsalary_level + someworker[test].extra_salary;
			someworker[test].factsalary = someworker[test].wksalary * (0.75 - someworker[test].tax_rate) - 2;
		}break;
		case 16:{
			std::cout<<"‚û§ üç∫ ËØ∑ËæìÂÖ•Êñ∞ÁöÑÂëòÂ∑•ÂØÜÁ†Å:";
			memset(someworker[test].pswd, 0, 20*sizeof(char));
			std::cin>>someworker[test].pswd;
		std::cout<<GREEN<<"‚û§ üçª ‰øÆÊîπÊàêÂäüÔºÅÊñ∞ÁöÑÂëòÂ∑•ÂØÜÁ†Å:"<<someworker[test].pswd<<"\n"<<NONE;
		}break;
		default :
			{
				std::cout<<RED"‚û§ ‚ùå ËØ∑Ê£ÄÊü•ÊÇ®ÁöÑËæìÂÖ•ÊòØÂê¶ÂêàÊ≥ï\n"<<NONE;
			}break;
	}
	fclose(fp);
	fp = fopen("misinfo.dat", "wb+");
	rewind(fp);
for(int i=0;i<MAXWORKER;i++)
{
	fwrite(&someworker[i], size, 1, fp);
}
fclose(fp);
fp = fopen("misinfo.dat","a+b");
system("clear");
graph_worker();
}

void BMinfo()
{	
	int c = 0;
	for(int i = 0 ;i < MAXWORKER ;i++)
	{
		if(someworker[i].wkid[0] == '\0')
		continue;
		if(someworker[i].wkBMnum > c) c = someworker[i].wkBMnum;
	}
	system("clear");
	std::cout<<"‚û§ üçª\n";
	std::cout<<"‚û§ ‚úîÔ∏è Áé∞Êúâ"<<RED<<c<<NONE<<"‰∏™ÈÉ®Èó®\n";
	std::cout<<"---               1.Êõ¥ÊîπÈÉ®Èó®ÁÆÄ‰ªã\n";
	std::cout<<"---               2.ÊòæÁ§∫ÈÉ®Èó®ÁÆÄ‰ªã\n";
	std::cout<<"---               3.ÊµèËßàÈÉ®Èó®‰ø°ÊÅØ\n";
	std::cout<<"---               0.ËøîÂõû‰∏ä‰∏ÄÂ±Ç\n";
	int mode;
	std::cout<<"‚û§ üç∫ ËØ∑ËæìÂÖ•ÈÄâÈ°πÔºö";
	std::cin>>mode;
	switch (mode)
	{
		case 0 :
			{
				gui_main();
			}break;
		case 1 :
			{
//				root_check();
				std::cout<<"‚û§ üç∫ ËØ∑ËæìÂÖ•Ë¶Å‰øÆÊîπÁÆÄ‰ªãÁöÑÈÉ®Èó®ÁºñÂè∑:";
				int a = 0;
				std::cin>>a;
			if (a <= 0 || a > c) 
			{
			std::cout<<RED"‚û§ ‚ùóÔ∏è ËæìÂÖ•ÈîôËØØÔºÅÁõÆÂâçÂè™Êúâ"<<c<<"‰∏™ÈÉ®Èó®!\n"<<NONE;
			BMinfo();
			}
			for(int i =0 ;i< MAXWORKER ; i++)
			{
				if(someworker[i].wkBMnum == a)
				{
				std::cout<<"‚û§ ÈÉ®Èó®:"<<someworker[i].wkBM<<"\n";
				break;
				}
			}
			std::cout<<"‚û§ üç∫ ËØ∑ËæìÂÖ•ÈÉ®Èó®ÁÆÄ‰ªã(Áî®Ëã±ÊñáÊàñËÄÖÊãºÈü≥):";
			char tempjj[200];
			memset(tempjj, 0, 200*sizeof(char));
			std::cin>>tempjj;
			for(int i = 0; i< MAXWORKER  ;i++)
			{
				if(someworker[i].wkid[0]=='\0') continue;
				if(someworker[i].wkBMnum == a )
				strcpy(someworker[i].BMJJ, tempjj);
			}
			}break;
		case 2 :
			{
			int putter = 0;
			if (c == 0)
			{
				cout<<RED<<"‚û§ ‚ùóÔ∏è ÂΩìÂâçÊöÇÊó†ÈÉ®Èó®\n"<<NONE;
				sleep(2);
				BMinfo();
			}
			std::cout<<"‚û§ ËØ∑ËæìÂÖ•Ë¶ÅÊòæÁ§∫ÁÆÄ‰ªãÁöÑÈÉ®Èó®ÁºñÂè∑Ôºö";
			std::cin>>putter;
			while(putter <= 0 || putter > c)
			{
				std::cout<<RED<<"‚û§ ‚ùå ËæìÂÖ•ÈîôËØØÔºÅËØ∑ÈáçÊñ∞ËæìÂÖ•:"<<NONE;
				std::cin>>putter;
			}
			for(int i =0 ;i < MAXWORKER ;i++)
			{
				if(someworker[i].wkid[0] == '\0') continue;
				if(someworker[i].wkBMnum == putter)
				{
					if(someworker[i].BMJJ[0]== '\0')
					std::cout<<RED<<"‚û§ ‚ùóÔ∏è ËØ•ÈÉ®Èó®ÊöÇÊó†ÈÉ®Èó®ÁÆÄ‰ªã!\n"<<NONE;
					std::cout<<someworker[i].wkBM<<"\n";
					std::cout<<someworker[i].BMJJ<<"\n";
					sleep(3);
					break;
				}
			}
			BMinfo();
			}break;
			case 3:
				{
				for(int i =1; i <= c ;i++)
				{
					for(int i2=0 ; i2< MAXWORKER ;i2 ++)
					{
						if(someworker[i2].wkid[0]=='\0') continue;
						if(someworker[i2].wkBMnum == i)
						{
							std::cout<<GREEN<<"‚û§ ÈÉ®Èó®ÁºñÂè∑:"<<someworker[i2].wkBMnum<<"\n"<<NONE;
							std::cout<<"‚û§ ÈÉ®Èó®ÂêçÁß∞:"<<someworker[i2].wkBM<<"\n";
							std::cout<<"‚û§ ÈÉ®Èó®ÁÆÄ‰ªã:"<<someworker[i2].BMJJ;
							if(someworker[i2].BMJJ[0]=='\0') std::cout<<" ÊöÇÊó†";
							std::cout<<"\n";
							break;
						}
					}
				}
				sleep(5);
					}break;
				}
	fclose(fp);
	fp = fopen("misinfo.dat", "wb+");
	rewind(fp);
for(int i=0;i< MAXWORKER ;i++)
{
	fwrite(&someworker[i], size, 1, fp);
}
fclose(fp);
fp = fopen("misinfo.dat","a+b");
BMinfo();
}

void GWinfo()
{
	fflush(stdin);
	// system("clear");
	std::cout<<"‚û§ üçª\n";
	std::cout<<"---                1.ÊêúÁ¥¢Â≤ó‰Ωç‰ø°ÊÅØ\n";
	std::cout<<"---                2.‰øÆÊîπÂ≤ó‰ΩçËÅåË¥£\n";
	std::cout<<"---                3.ÊòæÁ§∫Â≤ó‰ΩçËÅåË¥£\n";
	std::cout<<"---                0.ÂõûÂà∞‰∏ªËèúÂçï\n";
	int mode = 0;
	std::cout<<"‚û§ üç∫ ËØ∑ÈÄâÊã©:";
	std::cin>>mode;
	switch (mode)
	{
		case 0 :
			{
				gui_main();
			}break;
		case 1 :
			{
				std::cout<<"‚û§ ËØ∑ËæìÂÖ•ËØ•Â≤ó‰ΩçÂêçÁß∞:";
				char tempGW[50];
				memset(tempGW, 0, 50*sizeof(char));
				std::cin>>tempGW;
				 int test = findinfo_string(9, tempGW);
				if(test == -1)
				{
				 std::cout<<"‚û§ ‚ùóÔ∏è Êú™ÊâæÂà∞Â≤ó‰Ωç:";
				 std::cout<<tempGW<<"\n";
				sleep(2);
				GWinfo();
				}	
			}break;
		case 2 :
			{
			std::cout<<"‚û§ ËØ∑ËæìÂÖ•Ë¶Å‰øÆÊîπÁÆÄ‰ªãÁöÑÂ≤ó‰ΩçÂêçÁß∞:";
			char tempGW[50];
			memset(tempGW, 0, 50*sizeof(char));
			std::cin>>tempGW;
			int test = findinfo_string(9, tempGW);
			if(test == -1)
			{
				std::cout<<"‚û§ ‚ùóÔ∏è Êó†Ê≠§Â≤ó‰ΩçÔºÅ\n";
				sleep(2);
				GWinfo();
			}
			std::cout<<"‚û§ üç∫ ËØ∑ËæìÂÖ•Â≤ó‰ΩçËÅåË¥£:";
			char tempZZ[200];
			memset(tempZZ, 0, 200*sizeof(char));
			std::cin>>tempZZ;
			for(int i = 0; i< MAXWORKER ;  i++)
			{
				if(someworker[i].wkid[0]=='\0')
				continue;
				if(strcmp(someworker[i].wkGW,tempGW)==0)
				strcpy(someworker[i].GWZZ,tempZZ);
			}
			}break;
		case 3:
			{
			std::cout<<"‚û§ üç∫ ËØ∑ËæìÂÖ•Ë¶ÅÊü•ÁúãËÅåË¥£ÁöÑÂ≤ó‰Ωç:";
			char tempGW[50];
			memset(tempGW,0,50*sizeof(char));
			std::cin>>tempGW;
			int test = findinfo_string(9, tempGW);
			if( test == -1)
			{
				std::cout<<"‚û§ ‚ùóÔ∏è Êó†Ê≠§Â≤ó‰Ωç!\n";
				sleep(2);
				GWinfo();
			}
			for(int i = 0; i< MAXWORKER ;  i++)
			{
				if(someworker[i].wkid[0]=='\0')
				continue;
				if(strcmp(someworker[i].wkGW,tempGW)==0)
				{
				if(someworker[i].GWZZ[0]=='\0')
				{
				std::cout<<"‚û§ ‚ùóÔ∏è ÊöÇÊó†ËÅåË¥£‰ø°ÊÅØÔºÅ";
				sleep(2);
				break;
				}
				std::cout<<"‚û§ Â≤ó‰ΩçËÅåË¥£:"<<someworker[i].GWZZ<<"\n";
				sleep(5);
				break;
				}
			}
			}break;
	}
	fclose(fp);
	fp = fopen("misinfo.dat", "wb+");
	rewind(fp);
	for(int i=0;i< MAXWORKER ;i++)
	{
		fwrite(&someworker[i], size, 1, fp);
	}
	fclose(fp);
	fp = fopen("misinfo.dat","a+b");
	GWinfo();
}

void searchforinfo()
{
	cout<<"‚û§  üç∫\n";
	std::cout<<"---                 1.ÈÄöËøáÂ∑•Âè∑Êü•Êâæ\n";
	std::cout<<"---                 2.ÈÄöËøáÂßìÂêçÊü•Êâæ\n";
	std::cout<<"---                 5.ÈÄöËøáÂÖ•ËÅåÊó•ÊúüÊü•Êâæ(Ê†ºÂºèÂ¶Ç2018-12-20)\n";
	std::cout<<"---                 7.ÈÄöËøáÈÉ®Èó®ÂêçÁß∞Êü•Êâæ\n";
	std::cout<<"---                 9.ÈÄöËøáÂ≤ó‰ΩçÂêçÁß∞Êü•Êâæ\n";
	std::cout<<"---                 11.ÈÄöËøáÁîµËØùÂè∑Á†ÅÊü•Êâæ\n";
	int mode;
	std::cin>>mode;
	char info[50];
	memset(info, 0, 50*sizec);
	switch(mode)
	{
		case 1:
			{
				std::cout<<"‚û§ ËØ∑ËæìÂÖ•Â∑•Âè∑:";
				memset(info, 0, 20*sizeof(char));
				std::cin>>info;
				int i = findinfo_string(1, info);
				if (i != -1)
				for(int c=1;c<=18;c++) output_info(i, c);
				sleep(3);
			}break;
		case 2:
			{
				std::cout<<"‚û§ ËØ∑ËæìÂÖ•ÂßìÂêç:";
				memset(info,0,20*sizeof(char));
				std::cin>>info;
				findinfo_string(2,info);
				sleep(3);
			}break;
		case 5:
			{
				std::cout<<"‚û§ ËØ∑ËæìÂÖ•ÂÖ•ËÅåÊó•Êúü:";
				memset(info, 0, 13*sizeof(char));
				std::cin>>info;
				findinfo_string(5, info);
				sleep(3);
			}break;
		case 7:
			{
				std::cout<<"‚û§ ËØ∑ËæìÂÖ•ÈÉ®Èó®ÂêçÁß∞:";
				memset(info,0,50*sizeof(char));
				std::cin>>info;
				findinfo_string(7, info);
				sleep(3);
			}break;
		case 9:
			{
				std::cout<<"‚û§ ËØ∑ËæìÂÖ•Â≤ó‰ΩçÂêçÁß∞:";
				memset(info, 0, 50*sizeof(char));
				std::cin>>info;
				findinfo_string(9, info);
				sleep(3);	
			}break;
		case 11:
			{
				std::cout<<"‚û§ ËØ∑ËæìÂÖ•ÁîµËØùÂè∑Á†Å:";
				memset(info, 0, 20*sizeof(char));
				std::cin>>info;
				findinfo_string(11,info);
				sleep(3);	
			}break;
	}
	graph_worker();
}

void gui_guest()
{
	std::cout<<"‚û§ üçª ËØ∑ËæìÂÖ•Âç≥Â∞ÜÊü•ËØ¢ÁöÑÂ∑•Âè∑Ôºö";
	char info[20];
	memset(info, 0, 20*sizeof(char));
	std::cin>>info;
	int test = findinfo_string(1, info);
	if(test == -1)
	{
		std::cout<<RED"‚û§ ‚ùå Êú™ÊâæÂà∞Â∑•Âè∑ÔºÅ\n\n"<<NONE;
		exit(0);
	}
	char pswdTmp[20];
	
	char *p;
	p = getpass("‚û§ ‚ùóÔ∏èËØ∑ËæìÂÖ•ËØ•ÂëòÂ∑•ÁöÑ‰∏™‰∫∫ÂØÜÁ†Å:");
	strcpy(pswdTmp, p);
	if(strcmp(someworker[test].pswd, pswdTmp)==0)
	{
	for(int i =1 ;i <=18;i++) output_info(test, i);
	}
	else
	{
		std::cout<<"‚û§ ‚ùå ÂØÜÁ†ÅÈîôËØØÔºÅ\n\n";
		exit(0);
	}

}





